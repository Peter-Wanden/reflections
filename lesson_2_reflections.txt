What happens when you initialize a repository? Why do you need to do it?

	Running 'git init' creates an empty repository in the working directory
	(the directory from which it is run. Git files are preceeded by a '.'
	which tells most opperating systems to hide the files. 

How is the staging area different from the working directory and the repository?
What value do you think it offers?

	The staging area allows you to choose and add the files you want to add to 
	a commit before you commit them. It's a very useful area for getting every 
	thing the way you want it before making a commit.

How can you use the staging area to make sure you have one commit per logical
change?
	
	You can modify various files in your code until a logical change is complete.
	The run a git diff on your code directory/s to see what files need to be 
	added to the staging area. This way you kow the staging area contains only
	one logical code change.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

	Branches are good for testing out new features and also for taking chances
	that you would not normally take :)

	Start a new branch each time you start a new piece of work or start something
	different. Think of it as context switching. Adding a new feature or fixing a 
	bug create a new branch. Master branch is your production quality branch that
	never breaks, always works. Then have a development branch where active work 
	is taking place. Also have a creative experemental branch or new feature 
	branches. New feature branches are where you are expecting code to go wrong
	yet you are sharing it with the public in the understanding that things will
	go wrong.

	Branches also allow you to switch to work on diferent things as you wish.
	

How do the diagrams help you visualize the branch structure?

	Diagrams help you visualise all of the different branches of code 

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
